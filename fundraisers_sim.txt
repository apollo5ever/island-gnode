Function Initialize() Uint64
10 STORE("CEO",HEX(SCID()))
20 SEND_ASSET_TO_ADDRESS(SIGNER(),1000000000,SCID())
30 STORE("QUORUM",0)
40 STORE("EPOCH-INIT",1691607914)
70 STORE("treasuryDERO",0)
99 RETURN 0
End Function

Function WL(L String, H String, T Uint64, f Uint64, F Uint64) Uint64
10 IF ASSETVALUE(HEXDECODE(H)) !=1 THEN GOTO 100
15 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(H))
20 dim i as Uint64
30 LET i = 0
40 STORE(H+T+"_W_"+(f+i),SUBSTR(L,i*66,66))
50 LET i=i+1
60 IF i > F - f THEN GOTO 99 ELSE GOTO 40
99 RETURN 0
100 RETURN 1
End Function

Function NF(G Uint64, D Uint64, A String, H String, i Uint64, name String, image String, tagline String, desc String, t String) Uint64
10 IF ASSETVALUE(HEXDECODE(H)) !=1 THEN GOTO 100
15 IF EXISTS(H+i+"_G") THEN GOTO 100
20 SetMetadata(H, i, name, image, tagline, desc)
30 STORE(H+i+"_G", G)
40 STORE(H+i+"_D", D)
50 STORE(H+i+"_F", A)
60 STORE(H+i+"_R",0)
70 STORE(H+i+"_C",0)
85 IF STRLEN(t)!=64 THEN GOTO 99
86 STORE(H+i+"_T",ASSETVALUE(HEXDECODE(t))*9/10) //store ico amount.
87 IF EXISTS("treasury"+t) THEN GOTO 91
88 STORE("treasury"+t,ASSETVALUE(HEXDECODE(t))/10)
89 STORE(H+i+"_t",t)
90 RETURN 0
91 STORE("treasury"+t,LOAD("treasury"+t)+ASSETVALUE(HEXDECODE(t))/10)
99 RETURN 0
100 RETURN 1
End Function

Function SetName(H String,i Uint64, Name String) Uint64
10 IF ASSETVALUE(HEXDECODE(H)) != 1 THEN GOTO 100
40 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(H))
50 STORE(H+i+"Name",Name)
99 RETURN 0
100 RETURN 1
End Function

Function SetImage(H String,i Uint64, Image String) Uint64
10 IF ASSETVALUE(HEXDECODE(H)) != 1 THEN GOTO 100
40 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(H))
50 STORE(H+i+"Image",Image)
99 RETURN 0
100 RETURN 1
End Function

Function SetTagline(H String, i Uint64, Tagline String) Uint64
10 IF ASSETVALUE(HEXDECODE(H)) != 1 THEN GOTO 100
40 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(H))
50 STORE(H+i+"Tagline",Tagline)
99 RETURN 0
100 RETURN 1
End Function

Function SetDescription(H String, i Uint64, Description String) Uint64
10 IF ASSETVALUE(HEXDECODE(H)) != 1 THEN GOTO 100
40 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(H))
50 STORE(H+i+"Desc",Description)
99 RETURN 0
100 RETURN 1
End Function

Function SetMetadata(H String, i Uint64, Name String, Image String, Tagline String, Description String) Uint64
10 IF ASSETVALUE(HEXDECODE(H)) != 1 THEN GOTO 100
40 STORE(H+i+"Image",Image)
50 STORE(H+i+"Tagline",Tagline)
60 STORE(H+i+"Desc",Description)
70 STORE(H+i+"Name",Name)
80 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(H))
99 RETURN 0
100 RETURN 1
End Function

//working on sg storing ico token reserved for supporter... could also implement revenue share for ico tokens if 10% goes to treasury. not crucial now
Function SG(H String, R Uint64) Uint64
10 IF EXISTS(H+"_D") == 0 THEN GOTO 100
20 IF LOAD(H+"_D") < BLOCK_TIMESTAMP() THEN GOTO 100
30 STORE(H+"_R", LOAD(H+"_R") + DEROVALUE())
33 IF EXISTS(H+"_t") THEN GOTO 34 ELSE GOTO 40
34 IF EXISTS(H+"::"+ADDRESS_STRING(SIGNER())+"::TOKEN") THEN GOTO 37
35 STORE(H+"::"+ADDRESS_STRING(SIGNER())+"::TOKEN",DEROVALUE())
36 GOTO 40
37 STORE(H+"::"+ADDRESS_STRING(SIGNER())+"::TOKEN",DEROVALUE()+LOAD(H+"::"+ADDRESS_STRING(SIGNER())+"::TOKEN"))
40 IF EXISTS(H+"::"+ADDRESS_STRING(SIGNER())+"::DERO") == 1 THEN GOTO 70
45 IF R == 0 THEN GOTO 55
50 STORE(H+"::"+ADDRESS_STRING(SIGNER())+"::DERO",DEROVALUE()*9/10)
52 RETURN 0
55 SEND_DERO_TO_ADDRESS(ADDRESS_RAW(LOAD(H+"_F")),DEROVALUE()*9/10)
57 STORE(H+"_C",LOAD(H+"_C")+DEROVALUE())
60 RETURN 0
70 IF R == 0 THEN GOTO 77
75 STORE(H+"::"+ADDRESS_STRING(SIGNER())+"::DERO",LOAD(H+"::"+ADDRESS_STRING(SIGNER())+"::DERO")+DEROVALUE()*9/10)
76 RETURN 0
77 SEND_DERO_TO_ADDRESS(ADDRESS_RAW(LOAD(H+"_F")),DEROVALUE()*9/10)
78 STORE(H+"_C",LOAD(H+"_C")+DEROVALUE())
80 RETURN 0
100 RETURN 1
End Function

Function WFF(H String, i Uint64) Uint64
10 IF EXISTS(H+i+"_D") == 0 THEN GOTO 100 //CHECK FUNDRAISER EXISTS
20 IF LOAD(H+i+"_D") > BLOCK_TIMESTAMP() THEN GOTO 65 //IF ACTIVE GO TO 65
30 IF LOAD(H+i+"_R") >= LOAD(H+i+"_G") THEN GOTO 70 //DEADLINE PAST. IF GOAL MET GOTO 70
40 IF EXISTS(H+i+"::"+ADDRESS_STRING(SIGNER())) == 0 THEN GOTO 100 //CHECK FOR REFUNDABLE DONATION
50 SEND_DERO_TO_ADDRESS(SIGNER(),LOAD(H+i+"::"+ADDRESS_STRING(SIGNER()))) //SEND REFUND
56 DELETE(H+i+"::"+ADDRESS_STRING(SIGNER())) //DELETE REFUND RECORD
60 RETURN 0
65 IF LOAD(H+i+"_R") < LOAD(H+i+"_G") THEN GOTO 100 //FUNDRAISER ACTIVE. IF GOAL NOT MET RETURN 1
70 SEND_DERO_TO_ADDRESS(ADDRESS_RAW(LOAD(H+i+"_F")), (LOAD(H+i+"_R")-LOAD(H+i+"_C"))*9/10) //FUNDRAISER ACTIVE AND GOAL MET. SEND UNCLAIMED FUNDS TO FUNDEE
75 STORE(H+i+"_C",LOAD(H+i+"_R")) //UPDATE RECORD OF CLAIMED FUNDS
99 RETURN 0
100 RETURN 1
End Function

Function WT(H String) Uint64
10 IF EXISTS(H+"_D") ==0 THEN GOTO 100 // CHECK FUNDRAISER EXISTS
20 IF LOAD(H+"_D")>BLOCK_TIMESTAMP() THEN GOTO 100 //IF ACTIVE RETURN 1
30 IF LOAD(H+"_R") < LOAD(H+"_G") THEN GOTO 70 //IF FAILED TO REACH GOAL GOTO 70
40 IF EXISTS(H+"::"+ADDRESS_STRING(SIGNER())+"::TOKEN") == 0 THEN GOTO 100 //IF NO TOKENS OWED RETURN 1
50 SEND_ASSET_TO_ADDRESS(SIGNER(),LOAD(H+"_T")*LOAD(H+"::"+ADDRESS_STRING(SIGNER())+"::TOKEN")/LOAD(H+"_R"),HEXDECODE(LOAD(H+"_t"))) //OWED TOKENS = DERO DONATED / TOTAL DERO RAISED * ICO TOTAL
60 DELETE(H+"::"+ADDRESS_STRING(SIGNER())+"::TOKEN") //DELETE RECORD OF TOKENS OWED
99 RETURN 0
100 RETURN 1
End Function

Function Deposit(token String) Uint64
1 STORE("treasury"+token,LOAD("treasury"+token)+ASSETVALUE(HEXDECODE(LOAD(token))))
2 RETURN 0
End Function

Function Withdraw(amount Uint64, token String, special Uint64) Uint64
1 IF ASSETVALUE(HEXDECODE(LOAD("CEO"))) != 1 THEN GOTO 99
2 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(LOAD("CEO")))
3 IF special ==1 THEN GOTO 20
4 IF amount > LOAD("treasury"+token) THEN GOTO 99
5 IF BLOCK_TIMESTAMP() < LOAD("allowanceRefresh"+token) THEN GOTO 8
6 STORE("allowanceRefresh"+token,BLOCK_TIMESTAMP()+LOAD("allowanceInterval"+token))
7 STORE("allowanceUsed"+token,0)
8 IF amount + LOAD("allowanceUsed"+token) > LOAD("allowance"+token) THEN GOTO 99
9 SEND_ASSET_TO_ADDRESS(SIGNER(),amount,HEXDECODE(LOAD(token)))
10 STORE("allowanceUsed"+token,LOAD("allowanceUsed"+token)+amount)
11 STORE("treasury"+token,LOAD("treasury"+token)-amount)
19 RETURN 0
20 IF LOAD("allowanceSpecial"+token) > LOAD("treasury"+token) THEN GOTO 99
21 SEND_ASSET_TO_ADDRESS(SIGNER(),LOAD("allowanceSpecial"+token),HEXDECODE(LOAD(token)))
22 STORE("treasury"+token,LOAD("treasury"+token)-LOAD("allowanceSpecial"+token))
23 DELETE("allowanceSpecial"+token)
98 RETURN 0
99 RETURN 1
End Function

Function SS(shares Uint64) Uint64
10 IF EXISTS(ADDRESS_STRING(SIGNER())+"_SHARES") == 0 THEN GOTO 100
20 IF LOAD(ADDRESS_STRING(SIGNER())+"_SHARES") < shares THEN GOTO 100
30 STORE(ADDRESS_STRING(SIGNER())+"_SHARES",LOAD(ADDRESS_STRING(SIGNER())+"_SHARES")-shares)
40 SEND_ASSET_TO_ADDRESS(SIGNER(),shares*10000,HEXDECODE(LOAD("COCO")))
50 STORE("T_COCO",LOAD("T_COCO")-shares*10000)
99 RETURN 0
100 RETURN 1
End Function

Function Propose(hash String, k String, v String, t String, seat Uint64) Uint64
10 IF ASSETVALUE(HEXDECODE(LOAD("CEO"))) != 1 THEN GOTO 13
11 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(LOAD("CEO")))
12 GOTO 15
13 IF ASSETVALUE(HEXDECODE(LOAD("seat"+seat))) !=1 THEN GOTO 100
14 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(LOAD("seat"+seat)))
15 STORE("APPROVE", 0)
20 IF hash =="" THEN GOTO 40
25 STORE("HASH",hash)
30 STORE("k","")
35 RETURN 0
40 STORE("k",k)
45 STORE("HASH","")
49 STORE("t",t)
80 STORE("v",v)
90 RETURN 0
100 RETURN 1
End Function

Function Approve(seat Uint64) Uint64
10 IF ASSETVALUE(HEXDECODE(LOAD("seat"+seat)))!=1 THEN GOTO 100
20 STORE("APPROVE",LOAD("APPROVE")+1)
30 STORE("trustee"+seat,ADDRESS_STRING(SIGNER()))
99 RETURN 0
100 RETURN 1
End Function

Function ClaimSeat(seat Uint64) Uint64
10 IF ADDRESS_STRING(SIGNER())!= LOAD("trustee"+seat) THEN GOTO 100
20 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(LOAD("seat"+seat)))
30 IF LOAD("APPROVE") == 0 THEN GOTO 99
40 STORE("APPROVE",LOAD("APPROVE")-1)
99 RETURN 0
100 RETURN 1
End Function

Function Update(code String) Uint64
10 IF ASSETVALUE(HEXDECODE(LOAD("CEO")))!=1 THEN GOTO 100
15 SEND_ASSET_TO_ADDRESS(SIGNER(),1,HEXDECODE(LOAD("CEO")))
20 IF SHA256(code) != HEXDECODE(LOAD("HASH")) THEN GOTO 100
30 IF LOAD("APPROVE") < LOAD("QUORUM") THEN GOTO 100
40 UPDATE_SC_CODE(code)
99 RETURN 0
100 RETURN 1
End Function

Function Store() Uint64
10 IF LOAD("APPROVE") < LOAD("QUORUM") THEN GOTO 100
20 STORE("APPROVE",0)
30 IF LOAD("t") == "U" THEN GOTO 60
40 STORE(LOAD("k"), LOAD("v"))
45 STORE("k","")
50 RETURN 0
60 STORE(LOAD("k"),ATOI(LOAD("v")))
65 STORE("k","")
99 RETURN 0
100 RETURN 1
End Function